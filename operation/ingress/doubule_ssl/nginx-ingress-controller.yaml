apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-nginx
  namespace: test
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx
  namespace: test
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: test
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tls-ingress
  labels:
    k8s-app: tls-ingress
  namespace: test
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: tls-ingress
  template:
    metadata:
      labels:
        k8s-app: tls-ingress
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ''
      serviceAccountName: ingress-nginx
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      containers:
        - image: registry.cn-hangzhou.aliyuncs.com/launcher/nginx-ingress-controller:v0.43.0
#        - image: registry.cn-hangzhou.aliyuncs.com/launcher/nginx-ingress-controller:0.20.0
#        - image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.30.0
          imagePullPolicy: IfNotPresent
          name: nginx
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
            - /nginx-ingress-controller
            - --election-id=ingress-controller-leader
            - --ingress-class=test
            - --default-ssl-certificate=test/tls-secret
            - --v=1
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: tls-ingress
  name: tls-ingress
  namespace: test
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
      name: p1
    - port: 443
      protocol: TCP
      targetPort: 443
      name: p2
  type: NodePort
  selector:
    k8s-app: tls-ingress
