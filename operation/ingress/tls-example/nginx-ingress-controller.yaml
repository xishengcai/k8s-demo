apiVersion: v1
kind: Namespace
metadata:
  name: ingress-nginx
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ingress-nginx
  namespace: ingress-nginx2
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: ingress-nginx
  namespace: ingress-nginx2
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: ingress-nginx
    namespace: ingress-nginx2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tls-ingress
  labels:
    k8s-app: tls-ingress
  namespace: ingress-nginx2
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: tls-ingress
  revisionHistoryLimit: 10
  minReadySeconds: 0
  template:
    metadata:
      labels:
        k8s-app: tls-ingress
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: ingress-nginx
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      containers:
        - image: registry.cn-hangzhou.aliyuncs.com/launcher/nginx-ingress-controller:v0.41.2
          imagePullPolicy: IfNotPresent
          name: nginx
          readinessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
          livenessProbe:
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            timeoutSeconds: 1
          ports:
            - containerPort: 80
              protocol: TCP
            - containerPort: 443
              protocol: TCP
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          args:
            - /nginx-ingress-controller
            - --ingress-class=test1
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
#            - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
#            - --default-ssl-certificate=ingress-nginx/gateway-certs
#      nodeSelector:
#        node-role.kubernetes.io/master: ""
---
apiVersion: v1
kind: Service
metadata:
  labels:
    k8s-app: tls-ingress
  name: tls-ingress
  namespace: ingress-nginx2
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 80
      name: p1
    - port: 443
      protocol: TCP
      targetPort: 443
      name: p2
    - name: websock-js-8080
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: tomcat-8081
      port: 8081
      targetPort: 8081
      protocol: TCP
  type: LoadBalancer
  selector:
    k8s-app: tls-ingress
